1. Importing the function from the module:
   >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

2. Checking for module docstring:
   >>> m = __import__("7-base_geometry").__doc__
   >>> len(m) > 1
   True

3. Checking for class docstring:
   >>> c = BaseGeometry.__doc__
   >>> len(c) > 1
   True

4. Checking for method docstring:
   >>> mod1 = BaseGeometry.area.__doc__
   >>> len(mod1) > 1
   True
   >>> mod2 = BaseGeometry.integer_validator.__doc__
   >>> len(mod2) > 1
   True

5. Checking for area failure:
   >>> b = BaseGeometry()
   >>> b.area()
   Traceback (most recent call last):
   ...
   Exception: area() is not implemented

6. Checking too many arguments for area:
   >>> b.area(1)
   Traceback (most recent call last):
   ...
   TypeError: area() takes 1 positional argument but 2 were given

7. Checking integer validator for passing integer:
   >>> b.integer_validator("integer", 1)

8. Checking for integer == 0:
   >>> b.integer_validator("integer", 0)
   Traceback (most recent call last):
   ...
   ValueError: integer must be greater than 0
	
9. Checking for integer < 0:
   >>> b.integer_validator("integer", -3)
   Traceback (most recent call last):
   ...
   ValueError: integer must be greater than 0

10. Checking for non-integer types:
    >>> b.integer_validator("bool", True)
    Traceback (most recent call last):
    ...
    TypeError: bool must be an integer
    >>> b.integer_validator("float", 6.9)
    Traceback (most recent call last):
    ...
    TypeError: float must be an integer
    >>> b.integer_validator("complex", complex(4, 7))
    Traceback (most recent call last):
    ...
    TypeError: complex must be an integer
    >>> b.integer_validator("bytes", b"bytes")
    Traceback (most recent call last):
    ...
    TypeError: bytes must be an integer
    >>> b.integer_validator("bytearrays", bytearray(b"bytes"))
    Traceback (most recent call last):
    ...
    TypeError: bytearrays must be an integer

11. Checking for no arguments to integer_validator:
    >>> b.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

12. Checking for only 1 argument to integer_validator:
    >>> b.integer_validator("integer")
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'
